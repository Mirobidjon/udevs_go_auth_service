before_script:
  - docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD

stages:
  - build
  - migrate
  - deploy

build_image_test:
  image: gitlab.udevs.io:5050/docker/docker:dind
  stage: build
  script:
    - make build-image TAG=$CI_PIPELINE_IID SERVICE_NAME=$CI_PROJECT_NAME PROJECT_NAME=$CI_PROJECT_NAMESPACE REGISTRY=$CI_REGISTRY ENV_TAG=test
    - make push-image TAG=$CI_PIPELINE_IID SERVICE_NAME=$CI_PROJECT_NAME PROJECT_NAME=$CI_PROJECT_NAMESPACE REGISTRY=$CI_REGISTRY ENV_TAG=test
  only:
    - staging

build_image_prod:
  image: gitlab.udevs.io:5050/docker/docker:dind
  stage: build
  script:
    - make build-image TAG=$CI_PIPELINE_IID SERVICE_NAME=$CI_PROJECT_NAME PROJECT_NAME=$CI_PROJECT_NAMESPACE REGISTRY=$CI_REGISTRY
    - make push-image TAG=$CI_PIPELINE_IID SERVICE_NAME=$CI_PROJECT_NAME PROJECT_NAME=$CI_PROJECT_NAMESPACE REGISTRY=$CI_REGISTRY
  only:
    - master

migrate-prod:
  stage: migrate
  image: gitlab.udevs.io:5050/docker/docker:dind
  before_script:
    - apk add wget && wget https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz
    - tar -xvf migrate.linux-amd64.tar.gz && mv migrate.linux-amd64 migrate && chmod +x migrate
  script:
    - ./migrate -path=$PWD/migrations/postgres -database="${UPM_GO_AUTH_SERVICE_PRODDB}?sslmode=disable&x-migrations-table=migrations_$CI_PROJECT_NAME" up
  only:
    - master

migrate-test:
  stage: migrate
  image: gitlab.udevs.io:5050/docker/docker:dind
  before_script:
    - apk add wget && wget https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz
    - tar -xvf migrate.linux-amd64.tar.gz && mv migrate.linux-amd64 migrate && chmod +x migrate
  script:
    - ./migrate -path=$PWD/migrations/postgres -database="${UPM_GO_AUTH_SERVICE_TESTDB}?sslmode=disable&x-migrations-table=migrations_$CI_PROJECT_NAME" up
  only:
    - staging

deploy_image_test:
  image: gitlab.udevs.io:5050/docker/docker:dind
  stage: deploy
  before_script:
    - eval $(ssh-agent -s)
    - echo "$GITLAB_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - ssh -p $UPM_TEST_SSH_PORT -o StrictHostKeyChecking=no $UPM_TEST_USER@$UPM_TEST_HOST 'docker service update --with-registry-auth --image '$CI_REGISTRY'/'$CI_PROJECT_NAMESPACE'/'$CI_PROJECT_NAME':'$CI_PIPELINE_IID' 'upm_$CI_PROJECT_NAME''
  only:
    - staging

deploy_image_prod:
  image: gitlab.udevs.io:5050/docker/docker:dind
  stage: deploy
  before_script:
    - eval $(ssh-agent -s)
    - echo "$GITLAB_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script: 
    - ssh -p $UPM_PROD_SSH_PORT -o StrictHostKeyChecking=no $UPM_PROD_USER@$UPM_PROD_HOST 'docker service update --with-registry-auth --image '$CI_REGISTRY'/'$CI_PROJECT_NAMESPACE'/'$CI_PROJECT_NAME':'$CI_PIPELINE_IID' 'upm_$CI_PROJECT_NAME''
  only:
    - master

