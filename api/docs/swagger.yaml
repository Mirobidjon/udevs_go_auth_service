definitions:
  auth_service.AddClientRequest:
    properties:
      client_platform_id:
        type: string
      client_type_id:
        type: string
      login_strategy:
        type: integer
    type: object
  auth_service.AddPermissionScopeRequest:
    properties:
      client_platform_id:
        type: string
      method:
        type: string
      path:
        type: string
      permission_id:
        type: string
    type: object
  auth_service.AddRelationRequest:
    properties:
      client_type_id:
        type: string
      description:
        type: string
      name:
        type: string
      type:
        type: integer
    type: object
  auth_service.AddRolePermissionRequest:
    properties:
      permission_id:
        type: string
      role_id:
        type: string
    type: object
  auth_service.AddRolePermissionsRequest:
    properties:
      permissions:
        items:
          $ref: '#/definitions/auth_service.AddRolePermissionRequest'
        type: array
    type: object
  auth_service.AddRolePermissionsResponse:
    properties:
      added_roles:
        type: integer
    type: object
  auth_service.AddRoleRequest:
    properties:
      client_platform_id:
        type: string
      client_type_id:
        type: string
      name:
        type: string
      project_id:
        type: string
    type: object
  auth_service.AddSessionToIntegrationResponse:
    properties:
      client_platform:
        $ref: '#/definitions/auth_service.ClientPlatform'
        type: object
      client_type:
        $ref: '#/definitions/auth_service.ClientType'
        type: object
      integration:
        $ref: '#/definitions/auth_service.Integration'
        type: object
      integration_found:
        type: boolean
      permissions:
        items:
          $ref: '#/definitions/auth_service.Permission'
        type: array
      session:
        $ref: '#/definitions/auth_service.Session'
        type: object
      token:
        $ref: '#/definitions/auth_service.Token'
        type: object
    type: object
  auth_service.AddUserInfoFieldRequest:
    properties:
      client_type_id:
        type: string
      data_type:
        type: string
      field_name:
        type: string
      field_type:
        type: string
    type: object
  auth_service.AddUserRelationRequest:
    properties:
      relation_id:
        type: string
      user_id:
        type: string
    type: object
  auth_service.Client:
    properties:
      client_platform_id:
        type: string
      client_type_id:
        type: string
      login_strategy:
        type: integer
      project_id:
        type: string
    type: object
  auth_service.ClientPlatform:
    properties:
      id:
        type: string
      name:
        type: string
      project_id:
        type: string
      subdomain:
        type: string
    type: object
  auth_service.ClientPlatformDetailedResponse:
    properties:
      id:
        type: string
      name:
        type: string
      permissions:
        items:
          $ref: '#/definitions/auth_service.Permission'
        type: array
      project_id:
        type: string
      scopes:
        items:
          $ref: '#/definitions/auth_service.Scope'
        type: array
      subdomain:
        type: string
    type: object
  auth_service.ClientPrimaryKey:
    properties:
      client_platform_id:
        type: string
      client_type_id:
        type: string
    type: object
  auth_service.ClientType:
    properties:
      confirm_by:
        type: integer
      id:
        type: string
      name:
        type: string
      project_id:
        type: string
      self_recover:
        type: boolean
      self_register:
        type: boolean
    type: object
  auth_service.CompleteClientType:
    properties:
      client_type:
        $ref: '#/definitions/auth_service.ClientType'
        type: object
      relations:
        items:
          $ref: '#/definitions/auth_service.Relation'
        type: array
      roles:
        items:
          $ref: '#/definitions/auth_service.Role'
        type: array
      user_info_fields:
        items:
          $ref: '#/definitions/auth_service.UserInfoField'
        type: array
    type: object
  auth_service.CreateClientPlatformRequest:
    properties:
      name:
        type: string
      project_id:
        type: string
      subdomain:
        type: string
    type: object
  auth_service.CreateClientTypeRequest:
    properties:
      confirm_by:
        type: integer
      name:
        type: string
      project_id:
        type: string
      self_recover:
        type: boolean
      self_register:
        type: boolean
    type: object
  auth_service.CreateIntegrationRequest:
    properties:
      active:
        type: integer
      client_platform_id:
        type: string
      client_type_id:
        type: string
      expires_at:
        type: string
      ip_whitelist:
        type: string
      project_id:
        type: string
      role_id:
        type: string
      secret_key:
        type: string
      title:
        type: string
    type: object
  auth_service.CreatePermissionRequest:
    properties:
      client_platform_id:
        type: string
      name:
        type: string
      parent_id:
        type: string
    type: object
  auth_service.CreateUserRequest:
    properties:
      active:
        type: integer
      client_platform_id:
        type: string
      client_type_id:
        type: string
      email:
        type: string
      expires_at:
        type: string
      login:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      photo_url:
        type: string
      project_id:
        type: string
      role_id:
        type: string
    type: object
  auth_service.GetClientMatrixResponse:
    properties:
      client_platforms:
        items:
          $ref: '#/definitions/auth_service.ClientPlatform'
        type: array
      client_types:
        items:
          $ref: '#/definitions/auth_service.ClientType'
        type: array
      clients:
        items:
          $ref: '#/definitions/auth_service.Client'
        type: array
    type: object
  auth_service.GetClientPlatformListResponse:
    properties:
      client_platforms:
        items:
          $ref: '#/definitions/auth_service.ClientPlatform'
        type: array
      count:
        type: integer
    type: object
  auth_service.GetClientTypeListResponse:
    properties:
      client_types:
        items:
          $ref: '#/definitions/auth_service.ClientType'
        type: array
      count:
        type: integer
    type: object
  auth_service.GetIntegrationListResponse:
    properties:
      count:
        type: integer
      integrations:
        items:
          $ref: '#/definitions/auth_service.Integration'
        type: array
    type: object
  auth_service.GetIntegrationSessionsResponse:
    properties:
      sessions:
        items:
          $ref: '#/definitions/auth_service.Session'
        type: array
    type: object
  auth_service.GetPermissionByIDResponse:
    properties:
      client_platform_id:
        type: string
      id:
        type: string
      name:
        type: string
      parent_id:
        type: string
      permission_scopes:
        items:
          $ref: '#/definitions/auth_service.PermissionScope'
        type: array
    type: object
  auth_service.GetPermissionListResponse:
    properties:
      count:
        type: integer
      permissions:
        items:
          $ref: '#/definitions/auth_service.Permission'
        type: array
    type: object
  auth_service.GetRolesResponse:
    properties:
      roles:
        items:
          $ref: '#/definitions/auth_service.Role'
        type: array
    type: object
  auth_service.GetUserListResponse:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/auth_service.User'
        type: array
    type: object
  auth_service.HasAccessRequest:
    properties:
      access_token:
        type: string
      client_platform_id:
        type: string
      method:
        type: string
      path:
        type: string
      project_id:
        type: string
    type: object
  auth_service.Integration:
    properties:
      active:
        type: integer
      client_platform_id:
        type: string
      client_type_id:
        type: string
      created_at:
        type: string
      data:
        type: string
      expires_at:
        type: string
      id:
        type: string
      ip_whitelist:
        type: string
      project_id:
        type: string
      role_id:
        type: string
      secret_key:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  auth_service.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  auth_service.LoginResponse:
    properties:
      client_platform:
        $ref: '#/definitions/auth_service.ClientPlatform'
        type: object
      client_type:
        $ref: '#/definitions/auth_service.ClientType'
        type: object
      permissions:
        items:
          $ref: '#/definitions/auth_service.Permission'
        type: array
      role:
        $ref: '#/definitions/auth_service.Role'
        type: object
      sessions:
        items:
          $ref: '#/definitions/auth_service.Session'
        type: array
      token:
        $ref: '#/definitions/auth_service.Token'
        type: object
      user:
        $ref: '#/definitions/auth_service.User'
        type: object
      user_found:
        type: boolean
    type: object
  auth_service.LogoutRequest:
    properties:
      access_token:
        type: string
    type: object
  auth_service.Permission:
    properties:
      client_platform_id:
        type: string
      id:
        type: string
      name:
        type: string
      parent_id:
        type: string
    type: object
  auth_service.PermissionScope:
    properties:
      client_platform_id:
        type: string
      method:
        type: string
      path:
        type: string
      permission_id:
        type: string
    type: object
  auth_service.PermissionScopePrimaryKey:
    properties:
      client_platform_id:
        type: string
      method:
        type: string
      path:
        type: string
      permission_id:
        type: string
    type: object
  auth_service.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    type: object
  auth_service.Relation:
    properties:
      client_type_id:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      type:
        type: integer
    type: object
  auth_service.ResetPasswordRequest:
    properties:
      password:
        type: string
      token:
        type: string
      user_id:
        type: string
    type: object
  auth_service.Role:
    properties:
      client_platform_id:
        type: string
      client_type_id:
        type: string
      id:
        type: string
      name:
        type: string
      project_id:
        type: string
    type: object
  auth_service.RolePermission:
    properties:
      permission_id:
        type: string
      role_id:
        type: string
    type: object
  auth_service.RolePermissionPrimaryKey:
    properties:
      permission_id:
        type: string
      role_id:
        type: string
    type: object
  auth_service.Scope:
    properties:
      client_platform_id:
        type: string
      method:
        type: string
      path:
        type: string
      requests:
        type: integer
    type: object
  auth_service.SendMessageToEmailRequest:
    properties:
      base_url:
        type: string
      email:
        type: string
      token:
        type: string
    type: object
  auth_service.Session:
    properties:
      client_platform_id:
        type: string
      client_type_id:
        type: string
      created_at:
        type: string
      data:
        type: string
      expires_at:
        type: string
      id:
        type: string
      integration_id:
        type: string
      ip:
        type: string
      project_id:
        type: string
      role_id:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  auth_service.Token:
    properties:
      access_token:
        type: string
      created_at:
        type: string
      expires_at:
        type: string
      refresh_in_seconds:
        type: integer
      refresh_token:
        type: string
      updated_at:
        type: string
    type: object
  auth_service.UpdateClientPlatformRequest:
    properties:
      id:
        type: string
      name:
        type: string
      subdomain:
        type: string
    type: object
  auth_service.UpdateClientRequest:
    properties:
      client_platform_id:
        type: string
      client_type_id:
        type: string
      login_strategy:
        type: integer
    type: object
  auth_service.UpdateClientTypeRequest:
    properties:
      confirm_by:
        type: integer
      id:
        type: string
      name:
        type: string
      self_recover:
        type: boolean
      self_register:
        type: boolean
    type: object
  auth_service.UpdatePermissionRequest:
    properties:
      client_platform_id:
        type: string
      id:
        type: string
      name:
        type: string
      parent_id:
        type: string
    type: object
  auth_service.UpdateRelationRequest:
    properties:
      client_type_id:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      type:
        type: integer
    type: object
  auth_service.UpdateRoleRequest:
    properties:
      client_platform_id:
        type: string
      client_type_id:
        type: string
      id:
        type: string
      name:
        type: string
      project_id:
        type: string
    type: object
  auth_service.UpdateUserInfoFieldRequest:
    properties:
      client_type_id:
        type: string
      data_type:
        type: string
      field_name:
        type: string
      field_type:
        type: string
      id:
        type: string
    type: object
  auth_service.UpdateUserRequest:
    properties:
      active:
        type: integer
      client_platform_id:
        type: string
      client_type_id:
        type: string
      email:
        type: string
      expires_at:
        type: string
      id:
        type: string
      login:
        type: string
      name:
        type: string
      phone:
        type: string
      photo_url:
        type: string
      project_id:
        type: string
      role_id:
        type: string
    type: object
  auth_service.UpsertScopeRequest:
    properties:
      client_platform_id:
        type: string
      method:
        type: string
      path:
        type: string
    type: object
  auth_service.User:
    properties:
      active:
        type: integer
      client_platform_id:
        type: string
      client_type_id:
        type: string
      created_at:
        type: string
      email:
        type: string
      expires_at:
        type: string
      id:
        type: string
      login:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      photo_url:
        type: string
      project_id:
        type: string
      role_id:
        type: string
      updated_at:
        type: string
    type: object
  auth_service.UserInfoField:
    properties:
      client_type_id:
        type: string
      data_type:
        type: string
      field_name:
        type: string
      field_type:
        type: string
      id:
        type: string
    type: object
  auth_service.UserRelation:
    properties:
      relation_id:
        type: string
      user_id:
        type: string
    type: object
  auth_service.UserRelationPrimaryKey:
    properties:
      relation_id:
        type: string
      user_id:
        type: string
    type: object
  config.Config:
    properties:
      authGRPCPort:
        type: string
      authServiceHost:
        type: string
      defaultLimit:
        type: string
      defaultOffset:
        type: string
      environment:
        description: debug, test, release
        type: string
      httpport:
        type: string
      httpscheme:
        type: string
      passcodeLength:
        type: integer
      passcodePool:
        type: string
      postgresDatabase:
        type: string
      postgresHost:
        type: string
      postgresMaxConnections:
        type: integer
      postgresPassword:
        type: string
      postgresPort:
        type: integer
      postgresUser:
        type: string
      secretKey:
        type: string
      serviceName:
        type: string
      settingsGRPCPort:
        type: string
      settingsServiceHost:
        type: string
      version:
        type: string
    type: object
  http.Response:
    properties:
      data:
        type: object
      description:
        type: string
      status:
        type: string
    type: object
  settings_service.AddLevelItemRequest:
    properties:
      description:
        type: string
      position_id:
        type: string
      title:
        type: string
    type: object
  settings_service.CreatePositionRequest:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  settings_service.CreateSphereRequest:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  settings_service.GetPositionListResponse:
    properties:
      count:
        type: integer
      positions:
        items:
          $ref: '#/definitions/settings_service.PositionSlim'
        type: array
    type: object
  settings_service.GetSphereListResponse:
    properties:
      count:
        type: integer
      spheres:
        items:
          $ref: '#/definitions/settings_service.Sphere'
        type: array
    type: object
  settings_service.Position:
    properties:
      description:
        type: string
      id:
        type: string
      level_items:
        items:
          $ref: '#/definitions/settings_service.Position_LevelItem'
        type: array
      title:
        type: string
    type: object
  settings_service.Position_LevelItem:
    properties:
      description:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  settings_service.PositionSlim:
    properties:
      description:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  settings_service.Sphere:
    properties:
      description:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  settings_service.UpdateLevelItemRequest:
    properties:
      description:
        type: string
      id:
        type: string
      position_id:
        type: string
      title:
        type: string
    type: object
  settings_service.UpdatePositionRequest:
    properties:
      description:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  settings_service.UpdateSphereRequest:
    properties:
      description:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
info:
  contact: {}
  description: This is a api gateway
  license: {}
  termsOfService: https://udevs.io
paths:
  /client:
    delete:
      consumes:
      - application/json
      description: Get Client
      operationId: remove_client
      parameters:
      - description: RemoveClientBody
        in: body
        name: remove-client
        required: true
        schema:
          $ref: '#/definitions/auth_service.ClientPrimaryKey'
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Client
      tags:
      - Client
    post:
      consumes:
      - application/json
      description: Create Client
      operationId: create_client
      parameters:
      - description: AddClientRequestBody
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/auth_service.AddClientRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Client data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.Client'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Client
      tags:
      - Client
    put:
      consumes:
      - application/json
      description: Update Client
      operationId: update_client
      parameters:
      - description: UpdateClientRequestBody
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/auth_service.UpdateClientRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Client data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.Client'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Client
      tags:
      - Client
  /client-platform:
    get:
      consumes:
      - application/json
      description: Get ClientPlatform List
      operationId: get_client_platform_list
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetClientPlatformListResponseBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.GetClientPlatformListResponse'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get ClientPlatform List
      tags:
      - ClientPlatform
    post:
      consumes:
      - application/json
      description: Create ClientPlatform
      operationId: create_client_platform
      parameters:
      - description: CreateClientPlatformRequestBody
        in: body
        name: client-platform
        required: true
        schema:
          $ref: '#/definitions/auth_service.CreateClientPlatformRequest'
      produces:
      - application/json
      responses:
        "201":
          description: ClientPlatform data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.ClientPlatform'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create ClientPlatform
      tags:
      - ClientPlatform
    put:
      consumes:
      - application/json
      description: Update ClientPlatform
      operationId: update_client_platform
      parameters:
      - description: UpdateClientPlatformRequestBody
        in: body
        name: client-platform
        required: true
        schema:
          $ref: '#/definitions/auth_service.UpdateClientPlatformRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ClientPlatform data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.ClientPlatform'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update ClientPlatform
      tags:
      - ClientPlatform
  /client-platform-detailed/{client-platform-id}:
    get:
      consumes:
      - application/json
      description: Get ClientPlatform By ID Detailed
      operationId: get_client_platform_detailed_by_id
      parameters:
      - description: client-platform-id
        in: path
        name: client-platform-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ClientPlatformDetailedBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.ClientPlatformDetailedResponse'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get ClientPlatform By ID Detailed
      tags:
      - ClientPlatform
  /client-platform/{client-platform-id}:
    delete:
      consumes:
      - application/json
      description: Get ClientPlatform
      operationId: delete_client_platform
      parameters:
      - description: client-platform-id
        in: path
        name: client-platform-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete ClientPlatform
      tags:
      - ClientPlatform
    get:
      consumes:
      - application/json
      description: Get ClientPlatform By ID
      operationId: get_client_platform_by_id
      parameters:
      - description: client-platform-id
        in: path
        name: client-platform-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ClientPlatformBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.ClientPlatform'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get ClientPlatform By ID
      tags:
      - ClientPlatform
  /client-type:
    get:
      consumes:
      - application/json
      description: Get ClientType List
      operationId: get_client_type_list
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetClientTypeListResponseBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.GetClientTypeListResponse'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get ClientType List
      tags:
      - ClientType
    post:
      consumes:
      - application/json
      description: Create ClientType
      operationId: create_client_type
      parameters:
      - description: CreateClientTypeRequestBody
        in: body
        name: client-type
        required: true
        schema:
          $ref: '#/definitions/auth_service.CreateClientTypeRequest'
      produces:
      - application/json
      responses:
        "201":
          description: ClientType data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.ClientType'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create ClientType
      tags:
      - ClientType
    put:
      consumes:
      - application/json
      description: Update ClientType
      operationId: update_client_type
      parameters:
      - description: UpdateClientTypeRequestBody
        in: body
        name: client-type
        required: true
        schema:
          $ref: '#/definitions/auth_service.UpdateClientTypeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ClientType data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.ClientType'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update ClientType
      tags:
      - ClientType
  /client-type/{client-type-id}:
    delete:
      consumes:
      - application/json
      description: Get ClientType
      operationId: delete_client_type
      parameters:
      - description: client-type-id
        in: path
        name: client-type-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete ClientType
      tags:
      - ClientType
    get:
      consumes:
      - application/json
      description: Get ClientType By ID
      operationId: get_client_type_by_id
      parameters:
      - description: client-type-id
        in: path
        name: client-type-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ClientTypeBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.CompleteClientType'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get ClientType By ID
      tags:
      - ClientType
  /client/{project-id}:
    get:
      consumes:
      - application/json
      description: Get Client Matrix
      operationId: get_client_matrix
      parameters:
      - description: project-id
        in: path
        name: project-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetClientMatrixBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.GetClientMatrixResponse'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Client Matrix
      tags:
      - Client
  /config:
    get:
      consumes:
      - application/json
      description: show service config data when the service environment set to debug
        mode
      operationId: get_config
      produces:
      - application/json
      responses:
        "200":
          description: Response data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/config.Config'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.Response'
      summary: get config data on the debug mode
  /has-access:
    post:
      consumes:
      - application/json
      description: Has Access
      operationId: has_access
      parameters:
      - description: HasAccessRequestBody
        in: body
        name: has-access
        required: true
        schema:
          $ref: '#/definitions/auth_service.HasAccessRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.User'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Has Access
      tags:
      - Session
  /integration:
    post:
      consumes:
      - application/json
      description: Create Integration
      operationId: create_Integration
      parameters:
      - description: CreateIntegrationRequestBody
        in: body
        name: Integration
        required: true
        schema:
          $ref: '#/definitions/auth_service.CreateIntegrationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Integration data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.Integration'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Integration
      tags:
      - Integration
  /integration/{integration-id}:
    delete:
      consumes:
      - application/json
      description: Delete Integration
      operationId: delete_Integration
      parameters:
      - description: Integration-id
        in: path
        name: integration-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Integration
      tags:
      - Integration
    get:
      consumes:
      - application/json
      description: Get Integration By ID
      operationId: get_Integration_by_id
      parameters:
      - description: integration-id
        in: path
        name: integration-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: IntegrationBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.Integration'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Integration By ID
      tags:
      - Integration
  /integration/{integration-id}/session:
    get:
      consumes:
      - application/json
      description: Get Integration Sessions
      operationId: get_integration_sessions
      parameters:
      - description: integration-id
        in: path
        name: integration-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetIntegrationSessionsResponseBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.GetIntegrationSessionsResponse'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Integration Sessions
      tags:
      - Integration
    post:
      consumes:
      - application/json
      description: Add Session To Integration
      operationId: get_integration_token
      parameters:
      - description: integration-id
        in: path
        name: integration-id
        required: true
        type: string
      - description: AddSessionToIntegrationRequestBody
        in: body
        name: addSessionToIntegration
        required: true
        schema:
          $ref: '#/definitions/auth_service.AddSessionToIntegrationResponse'
      produces:
      - application/json
      responses:
        "201":
          description: Integration Session Response
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.Session'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Add Session To Integration
      tags:
      - Integration
  /integration/{integration-id}/session/{session-id}:
    delete:
      consumes:
      - application/json
      description: Delete Session From Integration
      operationId: delete_session_from_integration
      parameters:
      - description: Integration-id
        in: path
        name: integration-id
        required: true
        type: string
      - description: session-id
        in: path
        name: session-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Session From Integration
      tags:
      - Integration
    get:
      consumes:
      - application/json
      description: Get Integration Token
      operationId: get_integration_token
      parameters:
      - description: integration-id
        in: path
        name: integration-id
        required: true
        type: string
      - description: session-id
        in: path
        name: session-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: IntegrationBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.Token'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Integration Token
      tags:
      - Integration
  /login:
    post:
      consumes:
      - application/json
      description: Login
      operationId: login
      parameters:
      - description: LoginRequestBody
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/auth_service.LoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.LoginResponse'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Login
      tags:
      - Session
  /logout:
    delete:
      consumes:
      - application/json
      description: Logout User
      operationId: logout
      parameters:
      - description: LogoutRequest
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/auth_service.LogoutRequest'
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Logout User
      tags:
      - Session
  /permission:
    get:
      consumes:
      - application/json
      description: Get Permission List
      operationId: get_permission_list
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetPermissionListResponseBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.GetPermissionListResponse'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Permission List
      tags:
      - Permission
    post:
      consumes:
      - application/json
      description: Create Permission
      operationId: create_permission
      parameters:
      - description: CreatePermissionRequestBody
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/auth_service.CreatePermissionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Permission data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.Permission'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Permission
      tags:
      - Permission
    put:
      consumes:
      - application/json
      description: Update Permission
      operationId: update_permission
      parameters:
      - description: UpdatePermissionRequestBody
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/auth_service.UpdatePermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Permission data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.Permission'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Permission
      tags:
      - Permission
  /permission-scope:
    delete:
      consumes:
      - application/json
      description: Get PermissionScope
      operationId: delete_permission_scope
      parameters:
      - description: PermissionScopePrimaryKeyBody
        in: body
        name: permission-scope
        required: true
        schema:
          $ref: '#/definitions/auth_service.PermissionScopePrimaryKey'
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete PermissionScope
      tags:
      - PermissionScope
    post:
      consumes:
      - application/json
      description: Create PermissionScope
      operationId: add_permission_scope
      parameters:
      - description: AddPermissionScopeRequestBody
        in: body
        name: permission-scope
        required: true
        schema:
          $ref: '#/definitions/auth_service.AddPermissionScopeRequest'
      produces:
      - application/json
      responses:
        "201":
          description: PermissionScope data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.PermissionScope'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create PermissionScope
      tags:
      - PermissionScope
  /permission/{permission-id}:
    delete:
      consumes:
      - application/json
      description: Get Permission
      operationId: delete_permission
      parameters:
      - description: permission-id
        in: path
        name: permission-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Permission
      tags:
      - Permission
    get:
      consumes:
      - application/json
      description: Get Permission By ID
      operationId: get_permission_by_id
      parameters:
      - description: permission-id
        in: path
        name: permission-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: PermissionBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.GetPermissionByIDResponse'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Permission By ID
      tags:
      - Permission
  /ping:
    get:
      consumes:
      - application/json
      description: this returns "pong" messsage to show service is working
      operationId: ping
      produces:
      - application/json
      responses:
        "200":
          description: Response data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.Response'
      summary: returns "pong" message
  /position:
    get:
      consumes:
      - application/json
      description: Get Position List
      operationId: get_position_list
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetPositionListResponseBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/settings_service.GetPositionListResponse'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Position List
      tags:
      - Position
    post:
      consumes:
      - application/json
      description: Create Position
      operationId: create_position
      parameters:
      - description: position
        in: body
        name: position
        required: true
        schema:
          $ref: '#/definitions/settings_service.CreatePositionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: PositionBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/settings_service.Position'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Position
      tags:
      - Position
    put:
      consumes:
      - application/json
      description: Update Position
      operationId: update_position
      parameters:
      - description: position
        in: body
        name: position
        required: true
        schema:
          $ref: '#/definitions/settings_service.UpdatePositionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: PositionBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/settings_service.Position'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Position
      tags:
      - Position
  /position/{position-id}:
    delete:
      consumes:
      - application/json
      description: Get Position
      operationId: delete_position
      parameters:
      - description: position-id
        in: path
        name: position-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Position
      tags:
      - Position
    get:
      consumes:
      - application/json
      description: Get Position By ID
      operationId: get_position_by_id
      parameters:
      - description: position-id
        in: path
        name: position-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: PositionBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/settings_service.Position'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Position By ID
      tags:
      - Position
  /position/{position-id}/level/{level-id}:
    delete:
      consumes:
      - application/json
      description: Remove Level Item
      operationId: remove_level_item
      parameters:
      - description: position-id
        in: path
        name: position-id
        required: true
        type: string
      - description: level-id
        in: path
        name: level-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Remove Level Item
      tags:
      - Position
  /position/level:
    post:
      consumes:
      - application/json
      description: Add Level Item
      operationId: add_level_item
      parameters:
      - description: AddLevelItemRequestBody
        in: body
        name: position
        required: true
        schema:
          $ref: '#/definitions/settings_service.AddLevelItemRequest'
      produces:
      - application/json
      responses:
        "201":
          description: PositionBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/settings_service.Position'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Add Level Item
      tags:
      - Position
    put:
      consumes:
      - application/json
      description: Update Level Item
      operationId: update_level_item
      parameters:
      - description: UpdateLevelItemRequestBody
        in: body
        name: position
        required: true
        schema:
          $ref: '#/definitions/settings_service.UpdateLevelItemRequest'
      produces:
      - application/json
      responses:
        "200":
          description: PositionBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/settings_service.Position'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Level Item
      tags:
      - Position
  /refresh:
    put:
      consumes:
      - application/json
      description: Refresh Token
      operationId: refresh
      parameters:
      - description: RefreshTokenRequestBody
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/auth_service.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.User'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Refresh Token
      tags:
      - Session
  /relation:
    post:
      consumes:
      - application/json
      description: Create Relation
      operationId: create_relation
      parameters:
      - description: AddRelationRequestBody
        in: body
        name: relation
        required: true
        schema:
          $ref: '#/definitions/auth_service.AddRelationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Relation data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.Relation'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Relation
      tags:
      - Relation
    put:
      consumes:
      - application/json
      description: Update Relation
      operationId: update_relation
      parameters:
      - description: UpdateRelationRequestBody
        in: body
        name: relation
        required: true
        schema:
          $ref: '#/definitions/auth_service.UpdateRelationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Relation data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.Relation'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Relation
      tags:
      - Relation
  /relation/{relation-id}:
    delete:
      consumes:
      - application/json
      description: Get Relation
      operationId: delete_relation
      parameters:
      - description: relation-id
        in: path
        name: relation-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Relation
      tags:
      - Relation
  /role:
    get:
      consumes:
      - application/json
      description: Get Roles List
      operationId: get_roles_list
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: client-platform-id
        in: query
        name: client-platform-id
        type: string
      - description: client-type-id
        in: query
        name: client-type-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetRolesListResponseBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.GetRolesResponse'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Roles List
      tags:
      - Role
    post:
      consumes:
      - application/json
      description: Create Role
      operationId: create_role
      parameters:
      - description: AddRoleRequestBody
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/auth_service.AddRoleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Role data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.Role'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Role
      tags:
      - Role
    put:
      consumes:
      - application/json
      description: Update Role
      operationId: update_role
      parameters:
      - description: UpdateRoleRequestBody
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/auth_service.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Role data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.Role'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Role
      tags:
      - Role
  /role-permission:
    delete:
      consumes:
      - application/json
      description: Get RolePermission
      operationId: delete_role_permission
      parameters:
      - description: RolePermissionPrimaryKeyBody
        in: body
        name: role-permission
        required: true
        schema:
          $ref: '#/definitions/auth_service.RolePermissionPrimaryKey'
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete RolePermission
      tags:
      - RolePermission
    post:
      consumes:
      - application/json
      description: Create RolePermission
      operationId: add_role_permission
      parameters:
      - description: AddRolePermissionRequestBody
        in: body
        name: role-permission
        required: true
        schema:
          $ref: '#/definitions/auth_service.AddRolePermissionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: RolePermission data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.RolePermission'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create RolePermission
      tags:
      - RolePermission
  /role-permission/many:
    post:
      consumes:
      - application/json
      description: Create RolePermissions
      operationId: add_role_permissions
      parameters:
      - description: AddRolePermissionsRequestBody
        in: body
        name: role-permission
        required: true
        schema:
          $ref: '#/definitions/auth_service.AddRolePermissionsRequest'
      produces:
      - application/json
      responses:
        "201":
          description: RolePermission Added Amount
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.AddRolePermissionsResponse'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create RolePermissions
      tags:
      - RolePermission
  /role/{role-id}:
    delete:
      consumes:
      - application/json
      description: Get Role
      operationId: delete_role
      parameters:
      - description: role-id
        in: path
        name: role-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Role
      tags:
      - Role
    get:
      consumes:
      - application/json
      description: Get Role By ID
      operationId: get_role_by_id
      parameters:
      - description: role-id
        in: path
        name: role-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ClientTypeBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.CompleteClientType'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Role By ID
      tags:
      - Role
  /sphere:
    get:
      consumes:
      - application/json
      description: Get Sphere List
      operationId: get_sphere_list
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetSphereListResponseBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/settings_service.GetSphereListResponse'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Sphere List
      tags:
      - Sphere
    post:
      consumes:
      - application/json
      description: Create Sphere
      operationId: create_sphere
      parameters:
      - description: CreateSphereRequestBody
        in: body
        name: sphere
        required: true
        schema:
          $ref: '#/definitions/settings_service.CreateSphereRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Sphere data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/settings_service.Sphere'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create Sphere
      tags:
      - Sphere
    put:
      consumes:
      - application/json
      description: Update Sphere
      operationId: update_sphere
      parameters:
      - description: UpdateSphereRequestBody
        in: body
        name: sphere
        required: true
        schema:
          $ref: '#/definitions/settings_service.UpdateSphereRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Sphere data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/settings_service.Sphere'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update Sphere
      tags:
      - Sphere
  /sphere/{sphere-id}:
    delete:
      consumes:
      - application/json
      description: Get Sphere
      operationId: delete_sphere
      parameters:
      - description: sphere-id
        in: path
        name: sphere-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete Sphere
      tags:
      - Sphere
    get:
      consumes:
      - application/json
      description: Get Sphere By ID
      operationId: get_sphere_by_id
      parameters:
      - description: sphere-id
        in: path
        name: sphere-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: SphereBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/settings_service.Sphere'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get Sphere By ID
      tags:
      - Sphere
  /upsert-scope:
    post:
      consumes:
      - application/json
      description: Upsert Scope
      operationId: upsert_scope
      parameters:
      - description: UpsertScopeRequestBody
        in: body
        name: upsert-scope
        required: true
        schema:
          $ref: '#/definitions/auth_service.UpsertScopeRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Role data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.Role'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Upsert Scope
      tags:
      - UpsertScope
  /user:
    get:
      consumes:
      - application/json
      description: Get User List
      operationId: get_user_list
      parameters:
      - description: offset
        in: query
        name: offset
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: search
        in: query
        name: search
        type: string
      - description: client-platform-id
        in: query
        name: client-platform-id
        type: string
      - description: client-type-id
        in: query
        name: client-type-id
        type: string
      - description: project-id
        in: query
        name: project-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetUserListResponseBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.GetUserListResponse'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get User List
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create User
      operationId: create_user
      parameters:
      - description: CreateUserRequestBody
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/auth_service.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.User'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create User
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update User
      operationId: update_user
      parameters:
      - description: UpdateUserRequestBody
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/auth_service.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.User'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update User
      tags:
      - User
  /user-info-field:
    post:
      consumes:
      - application/json
      description: Create UserInfoField
      operationId: create_user_info_field
      parameters:
      - description: AddUserInfoFieldRequestBody
        in: body
        name: user-info-field
        required: true
        schema:
          $ref: '#/definitions/auth_service.AddUserInfoFieldRequest'
      produces:
      - application/json
      responses:
        "201":
          description: UserInfoField data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.UserInfoField'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create UserInfoField
      tags:
      - UserInfoField
    put:
      consumes:
      - application/json
      description: Update UserInfoField
      operationId: update_user_info_field
      parameters:
      - description: UpdateUserInfoFieldRequestBody
        in: body
        name: user-info-field
        required: true
        schema:
          $ref: '#/definitions/auth_service.UpdateUserInfoFieldRequest'
      produces:
      - application/json
      responses:
        "200":
          description: UserInfoField data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.UserInfoField'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update UserInfoField
      tags:
      - UserInfoField
  /user-info-field/{user-info-field-id}:
    delete:
      consumes:
      - application/json
      description: Get UserInfoField
      operationId: delete_user_info_field
      parameters:
      - description: user-info-field-id
        in: path
        name: user-info-field-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete UserInfoField
      tags:
      - UserInfoField
  /user-relation:
    delete:
      consumes:
      - application/json
      description: Get UserRelation
      operationId: delete_user_relation
      parameters:
      - description: UserRelationPrimaryKeyBody
        in: body
        name: user-relation
        required: true
        schema:
          $ref: '#/definitions/auth_service.UserRelationPrimaryKey'
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete UserRelation
      tags:
      - UserRelation
    post:
      consumes:
      - application/json
      description: Create UserRelation
      operationId: add_user_relation
      parameters:
      - description: AddUserRelationRequestBody
        in: body
        name: user-relation
        required: true
        schema:
          $ref: '#/definitions/auth_service.AddUserRelationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: UserRelation data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.UserRelation'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create UserRelation
      tags:
      - UserRelation
  /user/{user-id}:
    delete:
      consumes:
      - application/json
      description: Get User
      operationId: delete_user
      parameters:
      - description: user-id
        in: path
        name: user-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Delete User
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get User By ID
      operationId: get_user_by_id
      parameters:
      - description: user-id
        in: path
        name: user-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: UserBody
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.User'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get User By ID
      tags:
      - User
  /user/reset-password:
    put:
      consumes:
      - application/json
      description: Reset Password
      operationId: reset_password
      parameters:
      - description: ResetPasswordRequestBody
        in: body
        name: reset_password
        required: true
        schema:
          $ref: '#/definitions/auth_service.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.LoginResponse'
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Update User
      tags:
      - User
  /user/send-message:
    post:
      consumes:
      - application/json
      description: Send Message to User Email
      operationId: send_message_to_user_email
      parameters:
      - description: SendMessageToEmailRequestBody
        in: body
        name: send_message
        required: true
        schema:
          $ref: '#/definitions/auth_service.SendMessageToEmailRequest'
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Send Message To User
      tags:
      - User
swagger: "2.0"
